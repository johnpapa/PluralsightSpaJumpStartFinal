@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS and JavaScript.</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-large">Learn more &raquo;</a></p>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a>
        </p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a>
        </p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a>
        </p>
    </div>
</div>

<div>
    <button type="button" data-bind="click: toggleText()">Toggle Text</button>
    <span>
        <span data-bind="fadeVisible: textVisible(), text: exampleText">
        </span>
    </span>
</div>
@Html.ActionLink("TypeaHead Example", "TypeaHead", null, new { @class = "btn btn-default"})


@section scripts {
<script>
    $(function() {
        function vm() {
            var self = this;
            self.exampleText = ko.observable('Example Binding');
            self.textVisible = ko.observable(false);
            self.toggleText = function() {
                self.textVisible(!self.textVisible());
            }
        };

        var viewModel = new vm();
        ko.applyBindings(viewModel);      
    });
</script>
}